generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String  @id @default(uuid())
  nickname    String  @unique
  password    String
  accessToken String?
}

model Project {
  id               String   @id @default(uuid())
  slug             String   @unique
  inDraft          Boolean  @default(true)
  title            String
  article          String
  projectDate      String
  imgPlaceholder   String
  imgPlaceholderId String
  technology       String
  platform         String
  urlDemo          String?
  urlRepository    String?
  metaTitle        String?
  metaDescription  String?
  metaKeywords     String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  album            Album?   @relation(fields: albumId, references: id)
  albumId          String?  @unique
}

model Post {
  id              String    @id @default(uuid())
  slug            String    @unique
  inDraft         Boolean   @default(true)
  title           String
  description     String
  article         String
  metaTitle       String?
  metaDescription String?
  metaKeywords    String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  comments        Comment[]
  album           Album?    @relation(fields: albumId, references: id)
  albumId         String?   @unique
}

model Meta {
  id              String  @id @default(uuid())
  page            String  @unique
  metaTitle       String?
  metaDescription String?
  metaKeywords    String?
  metaImage       String?
  metaAuthor      String?
}

model Comment {
  id        String   @id @default(uuid())
  author    String
  comment   String
  createdAt DateTime @default(now())
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
}

model GalleryFolder {
  id               String   @id @default(uuid())
  folderName       String   @unique
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  imgPlaceholder   String
  imgPlaceholderId String
  albums           Album[]
}

model Album {
  id              String        @id @default(uuid())
  albumName       String        @unique
  images          Image[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  galleryFolderId String
  galleryFolder   GalleryFolder @relation(fields: galleryFolderId, references: id)
  post            Post?
  project         Project?
}

model Image {
  id       String @id @default(uuid())
  url      String
  albumId  String
  publicId String
  album    Album  @relation(fields: albumId, references: id)
}

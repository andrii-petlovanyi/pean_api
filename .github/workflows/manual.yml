name: DEPLOY

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Create env file
      - name: Create environment file
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          PORT: ${{ env.PORT }}
          ELECTRON_PORT: ${{ env.ELECTRON_PORT}}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          CLOUD_PROVIDER: ${{ env.CLOUD_PROVIDER }}
          CLOUD_NAME: ${{ secrets.CLOUD_NAME }}
          CLOUD_API_KEY: ${{ secrets.CLOUD_API_KEY }}
          CLOUD_API_SECRET: ${{ secrets.CLOUD_API_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URL: ${{ env.GOOGLE_REDIRECT_URL }}
          CHAT_GPT_URL: ${{ env.CHAT_GPT_URL }}
          CHAT_GPT_TOKEN: ${{ secrets.CHAT_GPT_TOKEN }}
          CHAT_GPT_MODEL: ${{ env.CHAT_GPT_MODEL }}
        run: |
          echo "DATABASE_URL=$DATABASE_URL" > .env
          echo "PORT=$PORT" >> .env
          echo "ELECTRON_PORT=$ELECTRON_PORT" >> .env
          echo "JWT_SECRET=$JWT_SECRET" >> .env
          echo "CLOUD_PROVIDER=$CLOUD_PROVIDER" >> .env
          echo "CLOUD_NAME=$CLOUD_NAME" >> .env
          echo "CLOUD_API_KEY=$CLOUD_API_KEY" >> .env
          echo "CLOUD_API_SECRET=$CLOUD_API_SECRET" >> .env
          echo "GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID" >> .env
          echo "GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET" >> .env
          echo "GOOGLE_REDIRECT_URL=$GOOGLE_REDIRECT_URL" >> .env
          echo "CHAT_GPT_URL=$CHAT_GPT_URL" >> .env
          echo "CHAT_GPT_TOKEN=$CHAT_GPT_TOKEN" >> .env
          echo "CHAT_GPT_MODEL=$CHAT_GPT_MODEL" >> .env

      # Build project
      - name: Build project
        run: |
          npm install
          npm run build

      # Copy selected files to remote machine
      - name: Copy selected files
        run: |
          mkdir deploy
          cp -r dist prisma package.json ecosystem.config.js .env deploy/

      # Copy project to remoute machine
      - name: rsync deployments
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avzr --delete
          path: ./deploy/
          remote_path: /home/user/pean_api/
          remote_host: ${{ secrets.SERVER_IP }}
          remote_user: root
          remote_key: ${{ secrets.DEPLOY_KEY }}
